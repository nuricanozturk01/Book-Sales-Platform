server.port=8086
#jpa
spring.datasource.url=jdbc:postgresql://localhost:5432/book_db
spring.datasource.username=postgres
spring.datasource.password=12345
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#swagger
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
#Kafka Producer Config
spring.kafka.book-info-topic-name=book-producer-topic
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# kafka consumer config
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring-kafka-book-status-topic-name=book-status-producer-topic
spring.kafka.consumer.group-id=bookStock-checkStatus-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=nuricanozturk.dev.service.book.config.listener.StockInfo
